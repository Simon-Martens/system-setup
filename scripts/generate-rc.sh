# ==============================================================================
# 													 Generate bash or zsh RCs
#
# This script consolidates all .sh files from a specified source directory
# into a target shell configuration file (~/.bashrc or ~/.zshrc),
# with comments indicating the origin of each section.
# Shell-specific files (bash-*.sh or zsh-*.sh) are included first,
# followed by common .sh files.
#
# Author: Simon
# Date: $(date +"%Y-%m-%d %H:%M:%S %Z")
#
# Usage: ./generate_shell_rc.sh [bash|zsh]
# ==============================================================================

# --- Configuration ---
SOURCE_DIR="${HOME}/scripts/rc" # Your script directory
TARGET_SHELL_TYPE="$1"

# --- Validate Input ---
if [[ "$TARGET_SHELL_TYPE" != "bash" && "$TARGET_SHELL_TYPE" != "zsh" ]]; then
  echo "Error: Invalid shell type specified."
  echo "Usage: $0 [bash|zsh]"
  exit 1
fi

# --- Set Variables Based on Shell Type ---
TARGET_FILE=""
BACKUP_FILE=""
GENERATED_FILE_HEADER=""
SPECIFIC_PREFIX=""

if [ "$TARGET_SHELL_TYPE" = "bash" ]; then
  TARGET_FILE="${HOME}/.bashrc"
  BACKUP_FILE="${HOME}/.bashrc.bak.$(date +"%Y%m%d_%H%M%S")"
  SPECIFIC_PREFIX="bash-"
  GENERATED_FILE_HEADER=$(cat <<EOF
#!/usr/bin/env bash
# ==============================================================================
#                            ~/.bashrc - Main File
#
# This file is auto-generated for BASH by the generate_shell_rc.sh script.
# Do not edit this file directly, as your changes will be overwritten.
# Instead, edit the individual .sh files in ${SOURCE_DIR}
# and then re-run the generation script: ./generate_shell_rc.sh bash
#
# Generated on: $(date +"%Y-%m-%d %H:%M:%S %Z")
# ==============================================================================
EOF
)
elif [ "$TARGET_SHELL_TYPE" = "zsh" ]; then
  TARGET_FILE="${HOME}/.zshrc"
  BACKUP_FILE="${HOME}/.zshrc.bak.$(date +"%Y%m%d_%H%M%S")"
  SPECIFIC_PREFIX="zsh-"
  GENERATED_FILE_HEADER=$(cat <<EOF
#!/usr/bin/env zsh
# ==============================================================================
#                            ~/.zshrc - Main File
#
# This file is auto-generated for ZSH by the generate_shell_rc.sh script.
# Do not edit this file directly, as your changes will be overwritten.
# Instead, edit the individual .sh files in ${SOURCE_DIR}
# and then re-run the generation script: ./generate_shell_rc.sh zsh
#
# Generated on: $(date +"%Y-%m-%d %H:%M:%S %Z")
# ==============================================================================
EOF
)
fi


# --- Helper Functions ---
print_section_header() {
  echo "# =============================================================================="
  echo "# $1"
  echo "# =============================================================================="
  echo ""
}

print_section_footer() {
  echo ""
  echo "# =============================================================================="
  echo "# End of $1"
  echo "# =============================================================================="
  echo ""
  echo ""
}

# --- Main Script ---

# Safety check: Ensure source directory exists
if [ ! -d "$SOURCE_DIR" ]; then
  echo "Error: Source directory '$SOURCE_DIR' not found."
  exit 1
fi

echo "Generating new ${TARGET_FILE} from scripts in ${SOURCE_DIR} for ${TARGET_SHELL_TYPE}..."

# Backup existing target file
if [ -f "$TARGET_FILE" ]; then
  echo "Backing up existing ${TARGET_FILE} to ${BACKUP_FILE}..."
  cp "$TARGET_FILE" "$BACKUP_FILE"
  if [ $? -ne 0 ]; then
    echo "Error: Failed to create backup. Aborting."
    exit 1
  fi
fi

# Start with a clean target file and add the main header
echo "$GENERATED_FILE_HEADER" > "$TARGET_FILE"
echo "" >> "$TARGET_FILE"
echo "" >> "$TARGET_FILE"

# Phase 1: Process shell-specific files
echo "Processing ${TARGET_SHELL_TYPE}-specific files (${SPECIFIC_PREFIX}*.sh)..."
find "$SOURCE_DIR" -maxdepth 1 -type f -name "${SPECIFIC_PREFIX}*.sh" -print0 | sort -z | while IFS= read -r -d $'\0' script_file; do
  if [ -f "$script_file" ]; then
    filename=$(basename "$script_file")
    echo "  Adding: ${filename}..."

    {
      print_section_header "START OF ${TARGET_SHELL_TYPE}-SPECIFIC CONFIG FROM: ${filename}"
      cat "$script_file"
      print_section_footer "${filename}"
    } >> "$TARGET_FILE"
  fi
done

# Phase 2: Process common files
echo "Processing common files (*.sh, excluding bash-* and zsh-*)..."
find "$SOURCE_DIR" -maxdepth 1 -type f -name "*.sh" ! -name "bash-*.sh" ! -name "zsh-*.sh" -print0 | sort -z | while IFS= read -r -d $'\0' script_file; do
  if [ -f "$script_file" ]; then
    filename=$(basename "$script_file")
    echo "  Adding: ${filename}..."

    {
      print_section_header "START OF COMMON CONFIG FROM: ${filename}"
      cat "$script_file"
      print_section_footer "${filename}"
    } >> "$TARGET_FILE"
  fi
done

# Add a final closing remark
{
  echo "# =============================================================================="
  echo "#               End of auto-generated ${TARGET_SHELL_TYPE} content              "
  echo "# =============================================================================="
  echo ""
  echo "# Tip: Source this file in your interactive ${TARGET_SHELL_TYPE} sessions or ensure it's"
  echo "# automatically sourced by your shell's main configuration."
  echo ""
  echo "export SHELL_RC_GENERATED_ON=\"$(date +"%Y-%m-%d %H:%M:%S %Z")\""

} >> "$TARGET_FILE"

echo ""
echo "Successfully generated ${TARGET_FILE}!"
echo "A backup of the previous version (if any) was saved to ${BACKUP_FILE}"
echo "Please review the new ${TARGET_FILE} and source it or open a new terminal."
echo "Example: source ${TARGET_FILE}"

exit 0
